*mini project 2 shopping cart
1. tạo project - mini-project-2
2.cài redux (npm -i --save redux react-redux)
3. chuyển thiết kế từ template 
  - transform.tool
  - chuyển code html -> jsx
  - coppy file tài nguyên (css , js, fonts , image) từ template/
       vào thư mục public của ứng dụng mini-project-2
  -
4. Phân chia các component
     - App:
          -Title
          -ListProduct
               -Product
          -Cart
               -CartItem
               -CartTotal
               -Notify
     =========> 15'phút
5. Tổ chức cấu trúc của ứng dụng ReactJs-redux
     src:
          + components (view người dùng)
          + actions (xác định các action trong ứng dụng)
          + constants (xác định các Hằng số của ứng dụng)
          + reducers (tạo các reducer )
          + store (Tổ chức kho dữ liệu)
6. tổ chức components (Class component)

7. tạo các constants cho ứng dụng 
     - actionType.js
          + xử lí các chức năng CRUD cho ứng dụng
               Load products : "LIST_PRODUCT
               Mua hàng       :"BUY_ITEM"
               Cập nhật       :"UPDATE_ITEM"
               Xóa sản phẩm       :"DELETE_ITEM"
     - message.js
          + hằng thông báo tương ứng với các chứng năng
               ++ MSG_LOAD_SUCCESS : thông báo -> ready to BUY ITEM
               ++ MSG_BUY_SUCCESS  :buy successfull
               ++ MSG_UPDATE_SUCCESS : update successfull
               ++ MSG_DELETE_SUCCESS : remove successfull
               ++ LOCALSTORAGENAME: hằng số lưu trữ dữ liệu giỏ hàng
8. xác định chức năng hệ thống (action)
     action { type:....,data: ....}
          -chức năng hiển thị thông tin sản phẩm: 
               act_list_product:
                    return {type:...}
          -chức năng mua hàng: thêm sản phẩm vào giỏ hàng:
               act_buy_item (product,quantity) => 
               return {type:...,product:...,quantity:...}
          -chức năng cập nhật giỏ hàng: thêm , bớt số lượng trong giỏ hàng
               act_update_item (product,quantity) =>return {
                    type:...,
                    product:...,
                    quantity:...
               }
          -chức năng xóa sản phẩm trong giỏ hàng
               act_delete_item(product)=>return {
                    type: ...
                    ,product:...
               }
          -chức năng thông báo : mỗi khi các hành động trên xảy ra +> thông báo.
               act_change_notify(content)=> return{
                    type: ...,
                    content:...
               }
9. Tạo các reducer để xử lý các action tương ứng
     - listProduct.js : trạng thái dữ liệu cho ListProduct
     - notify.js : trạng thái dữ liệu Notify
     - cart.js  :trạng thái dữ liệu cho Cart
     - index.js : kết hợp quản lý trạng thái cho ứng dụng (combine)
10. Tạo store cho ứng dụng
     index.js 
          createStore của redux
11. cung cấp store cho ứng dụng
     - sử dụng Provider của react-redux
          ++ bao ngoài component <App />
               src -> index
12. tạo xử lí với reducer 
     -listProduct.js =>
     -notify.js =>
13. hiển thị thông báo trên componentNotify
     -connect component => store
     -mapStateToProps.
14. Xây dựng xử lý cart.js (reducer) quản lý giỏ hàng - Mua hàng.
     - khởi tạo : giỏ hàng rỗng
     - khi người dùng mua hàng: ( Lưu trữ dữ liệu trong LocalStorage)
          -> phát sinh 2 trạng thái:
               + Lần đầu tiên mua hàng -> push data vào giỏ hàng
               + Đã mua hàng (Giỏ hàng đã tồn tại): phát sinh 2 trường hợp)
                    ++ TH1: sản phẩm chưa có trong giỏ hàng -> push vào giỏ.
                    ++ TH2 : sản phẩm đã có trong giỏ hàng -> thực hiện cập nhật lại số lượng
15. Bắn action mua hàng từ component (Product) -> bắn vào store
     -Product (component):
          ++ quản lí số lượng muua thông qua state(Controlled component)
          ++ xử lí sự kiện mua hàng : 
               -> bắn action(act_buy_item) -> vào reducer
                    +++ phát sinh sự kiện click trên nút mua hàng
                    +++ dispatch ->
                    +++ connect to store
16. Hiển thị sản phẩm mua từ store lên component Cart
     - Cart:
          ++ mapStateToProps (state) --
          ++ connect to store
          ++ render to cart item
          ++ quản lí quantity thông qua state của component
17. Xử lí thông tin CartTotal
     -Cart :
          -> list cart -> CartTotal
               ++ thực hiện render có đkiện      
18. xử lí xóa
     -action:(index.js)
          ++ act_delete_item(product)
     -reducer:(cart.js)
          + xử lí cho case: DELETE_ITEM
               + xóa trong State và cập nhật localStorage
19. updaate
    -action:(index.js)
          ++ act_update_item(product)
     -reducer:(cart.js)
          + xử lí cho case: UPDATE_ITEM
               + sửa trong State và cập nhật localStorage 